{"version":3,"file":"helper.js","sourceRoot":"/","sources":["src/museum/helper.ts"],"names":[],"mappings":"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","sourcesContent":["import { LogService } from '../common/index';\nimport { VisitorRespFormat } from '../common/interfaces/visitorRespFormat';\nimport moment from 'moment';\nimport axios from 'axios';\nimport ms from 'millisecond';\nconst log = LogService;\n\nexport class Helper {\n  /**\n   * get Museum Data\n   * @static\n   * @param {*} query\n   * @returns Museum Data\n   * @memberof Helper\n   */\n\n  public static async get(query: any) {\n    log.info('Entering Helper::get');\n    try {\n      const response = await axios({\n        url: 'https://data.lacity.org/resource/trxm-jn3c.json',\n        method: 'GET',\n        data: {\n          limit: 5000,\n          app_token: 'U2O5FsKrKQDUZyO4Fykstx7XJ',\n        },\n      });\n      const filterResponse = await Helper.filterMuseumResponse(\n        query,\n        response.data\n      );\n      return filterResponse;\n    } catch (error) {\n      log.error('Helper::get' + JSON.stringify(error));\n      throw error;\n    }\n  }\n\n  public static async filterMuseumResponse(query: any, museumData: any) {\n    log.info('Entering Helper::filterMuseumResponse');\n    try {\n      const date = query.date;\n      const data = museumData.filter(function (x) {\n        const getMonth = x.month.split('T');\n        if (getMonth[0] == moment(ms(date + ' ms')).format('YYYY-MM-DD')) {\n          return x;\n        }\n      });\n      return data;\n    } catch (error) {\n      log.error('Helper::filterMuseumResponse' + JSON.stringify(error));\n      throw error;\n    }\n  }\n\n  /**\n   * Visitors Count\n   * @static\n   * @param {*} query\n   * @param {*} museumData\n   * @returns Visitors Count Object\n   * @memberof Helper\n   */\n\n  public static async constructVisitorsResp(query: any, museumData: any) {\n    log.info('Entering Helper::constructVisitorsResp');\n    try {\n      const ignore = query.ignore;\n      let min = await Helper.setMinCountVal(ignore, museumData);\n      let max = 0;\n      let count = 0;\n      let highest: any = {};\n      let lowest: any = {};\n      let ignored: any = {};\n      let month;\n      let year;\n      for (let i = 0; i < museumData.length; i++) {\n        for (const key in museumData[i]) {\n          if (ignore && key == ignore) {\n            ignored = {\n              museum: key,\n              visitors: museumData[i][key],\n            };\n          } else {\n            if (key !== 'month') {\n              if (parseInt(museumData[i][key]) > max) {\n                max = parseInt(museumData[i][key]);\n                highest = {\n                  museum: key,\n                  visitors: parseInt(museumData[i][key]),\n                };\n              }\n              if (parseInt(museumData[i][key]) < min) {\n                min = parseInt(museumData[i][key]);\n                lowest = {\n                  museum: key,\n                  visitors: parseInt(museumData[i][key]),\n                };\n              }\n              count = count + parseInt(museumData[i][key]);\n            } else {\n              month = moment(museumData[i][key]).format('MMMM');\n              year = moment(museumData[i][key]).year();\n            }\n          }\n        }\n      }\n      const visitorCountResp: VisitorRespFormat = {\n        attendance: {\n          month: month,\n          year: year,\n          highest: highest,\n          lowest: lowest,\n          total: count,\n        },\n      };\n      if (query.ignore) visitorCountResp.attendance['ignored'] = ignored;\n      return visitorCountResp;\n    } catch (error) {\n      log.error('Helper::constructVisitorsResp' + JSON.stringify(error));\n      throw error;\n    }\n  }\n\n  public static async setMinCountVal(ignore, museumData: any) {\n    log.info('Entering Helper::setMinCountVal');\n    let minVal = 0;\n    for (let i = 0; i < 1; i++) {\n      for (const key in museumData[i]) {\n        if (ignore && key !== ignore && key !== 'month') {\n          minVal = parseInt(museumData[i][key]);\n          break;\n        } else if (key !== 'month') {\n          minVal = parseInt(museumData[i][key]);\n          break;\n        }\n      }\n    }\n    log.info('Exiting Helper::setMinCountVal');\n    return minVal;\n  }\n}\n"]}